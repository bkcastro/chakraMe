import{O as e,S as t,a as r,C as a,M as i,B as n,V as o,b as l,P as s,L as u,c,d,e as v,W as h,f as m,X as p,A as g,g as w}from"./vendor.2643e544.js";class f extends e{constructor(){super()}}const C={innerAura:{vertex:"\n                varying vec3 vertexNormal; \n\n                void main() {\n                    vertexNormal = normalize(normalMatrix * normal);\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); \n                }\n",fragment:"\n                uniform vec3 uColor;\n\n                varying vec3 vertexNormal; \n\n                void main() {\n                    float intensity = pow(1.6 - dot(vertexNormal, vec3(0.0, 0.0, 1.0)), 2.0);\n                    gl_FragColor = vec4(uColor, 1.0) * intensity;\n                }\n"},outerAura:{vertex:"\n                varying vec3 vertexNormal; \n\n                void main() {\n                    vertexNormal = normalize(normalMatrix * normal);\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); \n                }\n",fragment:"\n                uniform vec3 uColor;\n\n                varying vec3 vertexNormal; \n\n                void main() {\n                    float intensity = pow(1.0 - dot(vertexNormal, vec3(0.0, 0.0, 1.0)), 2.0);\n                    gl_FragColor = vec4(uColor, 1.0) * intensity;\n                }\n\n"},particles:{vertex:"\n                attribute float size;\n                uniform vec3 innerColor; \n                uniform vec3 outerColor; \n                uniform float uSize;\n\n                varying vec3 vInnerColor; \n                varying vec3 vOuterColor; \n                varying vec3 vColor;\n                varying vec3 vPosition;\n                void main() {\n                    vInnerColor = innerColor; \n                    vOuterColor = outerColor;\n                    vPosition = position;\n                    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n                    gl_PointSize = uSize;\n                    gl_Position = projectionMatrix * mvPosition;\n                }\n            ",fragment:"\n                varying vec3 vPosition;\n                varying vec3 vInnerColor; \n                varying vec3 vOuterColor; \n\n                void main() {\n                    float distance = length(vPosition);\n                    vec3 color = mix(vInnerColor, vOuterColor, distance);\n                    gl_FragColor = vec4(color, 1.0);\n                }\n            "}};class M extends f{constructor(){super();const e=new t(1,60,60);this.outerAuraMaterial=new r({uniforms:{uColor:{value:new a("white")}},vertexShader:C.outerAura.vertex,fragmentShader:C.outerAura.fragment,transparent:!0,opacity:.5}),this.outerAura=new i(e,this.outerAuraMaterial),this.outerAura.visible=!0,this.outerAura.scale.set(.4,.4,.4),this.add(this.outerAura),this.innerAuraMaterial=new r({uniforms:{uColor:{value:new a("red")}},vertexShader:C.innerAura.vertex,fragmentShader:C.innerAura.fragment}),this.innerAura=new i(e,this.innerAuraMaterial),this.innerAura.visible=!0,this.innerAura.scale.set(.25,.25,.25),this.add(this.innerAura),this.particleRadius=1,this.particleSpeed=2,this.particleCount=200,this.renderAsParticles=!1,this.positions=null,this.velocities=null,this.gravityStrength=5e-5,this.particleGeometry=new n,this.particleMaterial=new r({uniforms:{innerColor:{value:new a("red")},outerColor:{value:new a("magenta")},uSize:{value:4}},vertexShader:C.particles.vertex,fragmentShader:C.particles.fragment}),this.createParticles(),this.rotationSpeed={x:1,y:1,z:1}}createParticles(){null!=this.position&&this.remove(this.particles),this.positions=new Float32Array(3*this.particleCount),this.velocities=[];for(let e=0;e<this.particleCount;e++){new o((Math.random()-.5)*this.particleRadius/4,(Math.random()-.5)*this.particleRadius/4,(Math.random()-.5)*this.particleRadius/4).toArray(this.positions,3*e),this.velocities.push(new o(Math.random()-.5,Math.random()-.5,Math.random()-.5).multiplyScalar(.01*this.particleSpeed))}this.particleGeometry.setAttribute("position",new l(this.positions,3)),this.renderAsParticles?this.particles=new s(this.particleGeometry,this.particleMaterial):this.particles=new u(this.particleGeometry,this.particleMaterial),this.add(this.particles)}randomize(){this.outerAuraMaterial.uniforms.uColor.value=new a(Math.random(),Math.random(),Math.random()),this.innerAuraMaterial.uniforms.uColor.value=new a(Math.random(),Math.random(),Math.random()),this.particleMaterial.uniforms.innerColor.value=new a(Math.random(),Math.random(),Math.random()),this.particleMaterial.uniforms.outerColor.value=new a(Math.random(),Math.random(),Math.random()),this.outerAura.visible=A(),this.innerAura.visible=A(),this.renderAsParticles=A(),this.createParticles()}update(e){if(null!=this.particles){const e=this.particles.geometry.attributes.position;if(null==e)return;for(let t=0;t<this.particleCount;t++){const r=3*t,a=this.velocities[t];e.array[r]+=a.x,e.array[r+1]+=a.y,e.array[r+2]+=a.z;const i=new o(e.array[r],e.array[r+1],e.array[r+2]),n=i.clone().negate().normalize();if(a.add(n.multiplyScalar(this.gravityStrength)),i.length()>=this.particleRadius/1.2){const e=i.clone().normalize();a.reflect(e)}}e.needsUpdate=!0}this.rotateX(this.rotationSpeed.x/100),this.rotateY(this.rotationSpeed.y/100),this.rotateZ(this.rotationSpeed.z/100)}}function A(){return Math.random()<=.5}class x{constructor(e,r){this.controller1=r.xr.getController(0),this.controller1.addEventListener("selectstart",this.onSelectStart.bind(this)),this.controller1.addEventListener("selectend",this.onSelectEnd.bind(this)),this.dot=function(e=.01){return new i(new t(e,10,10),new c({color:"blue",wireframe:!0}))}(.01),this.controller1.add(this.dot),e.add(this.controller1),this.scene=e,this.rasengan=null,this.selected=!1}onSelectStart(){console.log("selecting"),null==this.rasengan?(this.controller1.remove(this.dot),this.rasengan=new M,this.rasengan.scale.set(.08,.08,.08),this.rasengan.position.set(0,0,0)):this.rasengan.randomize(),this.controller1.add(this.rasengan)}onSelectEnd(){console.log("ending select start")}update(e){null!=this.rasengan&&this.rasengan.update(e)}}const S=new w;let y,b,P,z,k,E,R=null;var B=document.querySelectorAll("input");B.forEach(((e,t)=>{e.onchange={0:e=>R.outerAuraMaterial.uniforms.uColor.value=new a(e.target.value),1:e=>R.outerAura.scale.set(e.target.value/50,e.target.value/50,e.target.value/50),2:e=>R.outerAura.visible=!R.outerAura.visible,3:e=>R.innerAuraMaterial.uniforms.uColor.value=new a(e.target.value),4:e=>R.innerAura.scale.set(e.target.value/50,e.target.value/50,e.target.value/50),5:e=>R.innerAura.visible=!R.innerAura.visible,6:e=>{R.renderAsParticles=!R.renderAsParticles,R.createParticles()},7:e=>{R.particleCount=e.target.value,R.createParticles()},8:e=>{R.particleSpeed=e.target.value/50,R.createParticles()},9:e=>R.particleMaterial.uniforms.uSize.value=e.target.value/2,10:e=>{R.particleRadius=e.target.value/50,R.createParticles()},11:e=>R.particleMaterial.uniforms.innerColor.value=new a(e.target.value),12:e=>R.particleMaterial.uniforms.outerColor.value=new a(e.target.value),13:e=>R.particles.visible=!R.particles.visible,14:e=>R.rotationSpeed.x=e.target.value/50,15:e=>R.rotationSpeed.y=e.target.value/50,16:e=>R.rotationSpeed.z=e.target.value/50,17:e=>{R.randomize(),j()}}[t]}));var H=document.getElementById("randomButton"),N=[];function L(){const e=S.getElapsedTime();null!=R&&R.update(e),null!=E&&E.update(e),N.forEach((t=>{t.update(e)})),z.render(P,b)}function _(){b.aspect=y.getBoundingClientRect().width/window.innerHeight,b.updateProjectionMatrix(),z.setSize(y.getBoundingClientRect().width,window.innerHeight)}function j(){B.forEach(((e,t)=>{switch(e.id=t,e.id){case"0":e.value="#"+R.outerAuraMaterial.uniforms.uColor.value.getHexString();break;case"1":e.value=50*R.outerAura.scale.x;break;case"2":e.checked=R.outerAura.visible;break;case"3":e.value="#"+R.innerAuraMaterial.uniforms.uColor.value.getHexString();break;case"4":e.value=50*R.innerAura.scale.x;break;case"5":e.checked=R.innerAura.visible;break;case"6":e.checked=R.renderAsParticles;break;case"7":e.value=R.particleCount;break;case"8":e.value=50*R.particleSpeed;break;case"9":e.value=R.particleMaterial.uniforms.uSize.value;break;case"10":e.value=50*R.particleRadius;break;case"11":e.value="#"+R.particleMaterial.uniforms.innerColor.value.getHexString();break;case"12":e.value="#"+R.particleMaterial.uniforms.outerColor.value.getHexString();break;case"13":e.value=R.particles.visible;break;case"14":e.value=50*R.rotationSpeed.x;break;case"15":e.value=50*R.rotationSpeed.y;break;case"16":e.value=50*R.rotationSpeed.z}}))}!function(){if(null!=R)return 0;y=document.getElementById("container"),P=new d,new o(0,0,0),b=new v(50,y.getBoundingClientRect().width/window.innerHeight,.1,100),b.position.set(4,4,4),z=new h({antialias:!0}),z.setPixelRatio(window.devicePixelRatio),z.setSize(y.getBoundingClientRect().width,window.innerHeight),z.shadowMap.enabled=!0,z.xr.enabled=!0,z.sortObjects=!1,z.setClearColor(new a(16777215)),y.appendChild(z.domElement),k=new m(b,z.domElement),k.enablePan=!1,k.update(),document.body.appendChild(p.createButton(z,{optionalFeatures:[]})),z.xr.addEventListener("sessionstart",(()=>{null!=R&&P.remove(R)}));const e=new g(.4);P.add(e),R=new M,P.add(R),E=new x(P,z),window.addEventListener("resize",_),H.addEventListener("click",(()=>{R.randomize(),j()}))}(),z.setAnimationLoop(L),j();
